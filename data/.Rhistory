for(col in columns){
print(colnames(df)[col])
#aov(df[,col] ~ df$IsVV, data=df)
print(summary(aov(unlist(df[,col] ~ df$IsVV, data=df))))
}
}
show_anova(ANOVA_Sheet, c(3, 4, 8, 9))
show_anova <- function(df, columns){
for(col in columns){
print(colnames(df)[col])
#aov(df[,col] ~ df$IsVV, data=df)
print(summary(aov(unlist(df[,col]) ~ df$IsVV, data=df)))
}
}
show_anova(ANOVA_Sheet, c(3, 4, 8, 9))
show_anova <- function(df, columns){
for(col in columns){
print(colnames(df)[col])
print(summary(aov(unlist(df[,col]) ~ df$IsVV, data=df)))
}
}
show_anova(ANOVA_Sheet, c(3, 4, 8, 9))
ANOVA_WSP_Sheet$IsVV = factor(ANOVA_WSP_Sheet$IsVV)
View(ANOVA_WSP_Sheet)
show_anova(ANOVA_WSP_Sheet, c(3, 4, 5, 6, 7))
View(ANOVA_WSP_Sheet)
View(ANOVA_Sheet)
kruskal.test(ANOVA_Sheet$SUS ~ ANOVA_Sheet$IsVV, data=ANOVA_Sheet)
View(show_all_t_test)
View(wsp_2D)
View(X2D_WSP)
View(VV_Godspeed)
View(X2D_Godspeed)
library(readr)
ANOVA_Godspeed_sheet <- read_csv("data/dataSplit/ANOVA_Godspeed_sheet.csv")
View(ANOVA_Godspeed_sheet)
show_all_t_test('y', 'n', c(3, 4, 5, 6))
show_all_t_test(ANOVA_Sheet, 'y', 'n', c(3, 4, 8, 9))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(show_all_t_test)
ANOVA_Godspeed_sheet$IsVV = factor(ANOVA_Godspeed_sheet$IsVV)
show_all_t_test(ANOVA_Godspeed_sheet, 'y', 'n', c(3, 4, 5, 6))
show_all_t_test <- function(df, filterOne, filterTwo, columns){
dataOne = subset(df, df[,2]==filterOne)
dataTwo = subset(df, df[,2] == filterTwo)
for(num in columns){
print(colnames(dataOne)[num])
show_t_test(unlist(dataOne), unlist(dataTwo), num)
}
}
show_all_t_test(ANOVA_Godspeed_sheet, 'y', 'n', c(3, 4, 5, 6))
show_t_test <- function(dataOne, dataTwo, colNum){
variance = var.test(unlist(dataOne[,colNum]), unlist(dataTwo[,colNum]))
if(variance$p.value >= 0.05){
print("Failed to reject Null Hypothesis: Variance is equal")
}else{
print("Rejected Null Hypothesis: Variance is not equal")
}
t_test_results = t.test(unlist(dataOne[,colNum]), unlist(dataTwo[,colNum]), var.equal= variance$p.value >= 0.05)
print(t_test_results)
if(t_test_results$p.value < 0.05){
print("**Rejected Null Hypothesis: Signifcant Difference in Mean**")
}else{
print("**Failed to reject Null Hypothesis: No Signifcant Difference in Mean**")
}
}
show_all_t_test(ANOVA_Godspeed_sheet, 'y', 'n', c(3, 4, 5, 6))
show_all_t_test(ANOVA_Sheet, 'y', 'n', c(3, 4, 8, 9))
show_t_test <- function(dataOne, dataTwo, colNum){
variance = var.test(dataOne[,colNum], dataTwo[,colNum])
if(variance$p.value >= 0.05){
print("Failed to reject Null Hypothesis: Variance is equal")
}else{
print("Rejected Null Hypothesis: Variance is not equal")
}
t_test_results = t.test(dataOne[,colNum], dataTwo[,colNum], var.equal= variance$p.value >= 0.05)
print(t_test_results)
if(t_test_results$p.value < 0.05){
print("**Rejected Null Hypothesis: Signifcant Difference in Mean**")
}else{
print("**Failed to reject Null Hypothesis: No Signifcant Difference in Mean**")
}
}
show_all_t_test <- function(df, filterOne, filterTwo, columns){
dataOne = subset(df, df[,2]==filterOne)
dataTwo = subset(df, df[,2] == filterTwo)
for(num in columns){
print(colnames(dataOne)[num])
show_t_test(dataOne, dataTwo, num)
}
}
show_all_t_test(ANOVA_Sheet, 'y', 'n', c(3, 4, 8, 9))
show_all_t_test(ANOVA_Sheet, 'y', 'n', c(3, 4,8, 9))
show_all_t_test(ANOVA_Sheet, 'y', 'n', c(3))
show_all_t_test(ANOVA_Sheet, 'y', 'n', c(3, 4,8, 9))
rm(ANOVA_Sheet)
library(readr)
ANOVA_Sheet <- read_csv("data/dataSplit/ANOVA_Sheet.csv")
View(ANOVA_Sheet)
ANOVA_Sheet$IsVV = factor(ANOVA_Sheet$IsVV)
show_all_t_test(ANOVA_Sheet, 'y', 'n', c(3, 4,8, 9))
show_t_test <- function(dataOne, dataTwo, colNum){
variance = var.test(dataOne[,colNum], dataTwo[,colNum])
if(variance$p.value >= 0.05){
print("Failed to reject Null Hypothesis: Variance is equal")
}else{
print("Rejected Null Hypothesis: Variance is not equal")
}
t_test_results = t.test(dataOne[,colNum], dataTwo[,colNum], var.equal= variance$p.value >= 0.05)
print(t_test_results)
if(t_test_results$p.value < 0.05){
print("**Rejected Null Hypothesis: Signifcant Difference in Mean**")
}else{
print("**Failed to reject Null Hypothesis: No Signifcant Difference in Mean**")
}
}
show_all_t_test(ANOVA_Sheet, 'y', 'n', c(3, 4,8, 9))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
load("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(ANOVA_Godspeed_sheet)
show_t_test(subset(ANOVA_Godspeed_sheet, ANOVA_Godspeed_sheet[,2]=='y'), subset(ANOVA_Godspeed_sheet, ANOVA_Godspeed_sheet[,2] == 'n'), c(3))
show_all_t_test(ANOVA_Godspeed_sheet, 'y', 'n', c(3))
show_all_t_test(ANOVA_Godspeed_sheet, 'y', 'n', c(3, 4, 5))
show_all_t_test(ANOVA_Godspeed_sheet, 'y', 'n', c(3, 4, 5,6))
show_all_t_test(ANOVA_Sheet, 'y', 'n', c(3, 4,8, 9))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(ANOVA_WSP_Sheet)
show_all_t_test(ANOVA_WSP_sheet, 'y', 'n', c(3, 4, 5,6,7,8))
show_all_t_test(ANOVA_WSP_Sheet, 'y', 'n', c(3, 4, 5,6,7,8))
show_t_test <- function(dataOne, dataTwo, colNum){
variance = var.test(dataOne[,colNum], dataTwo[,colNum])
if(variance$p.value >= 0.05){
print("Failed to reject Null Hypothesis: Variance is equal")
}else{
print("Rejected Null Hypothesis: Variance is not equal")
}
t_test_results = t.test(dataOne[,colNum], dataTwo[,colNum], var.equal= variance$p.value >= 0.05)
print(t_test_results$p.value)
if(t_test_results$p.value < 0.05){
print("**Rejected Null Hypothesis: Signifcant Difference in Mean**")
}else{
print("**Failed to reject Null Hypothesis: No Signifcant Difference in Mean**")
}
}
show_all_t_test(ANOVA_WSP_Sheet, 'y', 'n', c(3, 4, 5,6,7,8))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
load("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
glass_delta <- function(controlGroup, experimentalGroup){
controlMean = mean(controlGroup)
expMean = mean(experimentalGroup)
controlDev = sd(controlGroup)
return((controlMean-expMean)/controlDev)
}
load("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(ANOVA_Sheet)
show_all_glass <- function(df, filterControl, filterExp, columns){
controlGroup = subset(df, df[,2]==filterControl)
expGroup = subset(df, df[,2]==filterExp)
print(glass_delta(controlGroup[,columns[1]], expGroup[,columns[1]]))
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3))
show_all_glass <- function(df, filterControl, filterExp, columns){
controlGroup = subset(df, df[,2]==filterControl)
expGroup = subset(df, df[,2]==filterExp)
print(controlGroup[,columns[1]])
print(glass_delta(controlGroup[,columns[1]], expGroup[,columns[1]]))
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3))
glass_delta <- function(controlGroup, experimentalGroup){
controlMean = mean(controlGroup, na.rm = TRUE)
expMean = mean(experimentalGroup, na.rm = TRUE)
controlDev = sd(controlGroup, na.rm = TRUE)
return((controlMean-expMean)/controlDev)
}
show_all_glass <- function(df, filterControl, filterExp, columns){
controlGroup = subset(df, df[,2]==filterControl)
expGroup = subset(df, df[,2]==filterExp)
print(controlGroup[,columns[1]])
print(glass_delta(controlGroup[,columns[1]], expGroup[,columns[1]]))
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3))
show_all_glass <- function(df, filterControl, filterExp, columns){
controlGroup = subset(df, df[,2]==filterControl)
expGroup = subset(df, df[,2]==filterExp)
print(colnames(controlGroup)[1])
print(glass_delta(controlGroup[,columns[1]], expGroup[,columns[1]]))
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3))
show_all_glass <- function(df, filterControl, filterExp, columns){
controlGroup = subset(df, df[,2]==filterControl)
expGroup = subset(df, df[,2]==filterExp)
print(colnames(controlGroup)[columns[1]])
print(glass_delta(controlGroup[,columns[1]], expGroup[,columns[1]]))
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3))
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3))
show_all_glass <- function(df, filterControl, filterExp, columns){
controlGroup = subset(df, df[,2]==filterControl)
expGroup = subset(df, df[,2]==filterExp)
for(col in columns){
print(colnames(controlGroup)[columns[1]])
print(glass_delta(controlGroup[,columns[1]], expGroup[,columns[1]]))
print(' ')
}
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3))
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3, 4, 5, 8, 9))
show_all_glass <- function(df, filterControl, filterExp, columns){
controlGroup = subset(df, df[,2]==filterControl)
expGroup = subset(df, df[,2]==filterExp)
for(col in columns){
print(colnames(controlGroup)[columns[col]])
print(glass_delta(controlGroup[,columns[col]], expGroup[,columns[col]]))
print(' ')
}
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3, 4, 5, 8, 9))
show_all_glass <- function(df, filterControl, filterExp, columns){
controlGroup = subset(df, df[,2]==filterControl)
expGroup = subset(df, df[,2]==filterExp)
for(col in columns){
print(colnames(controlGroup)[col])
print(glass_delta(controlGroup[col], expGroup[col]))
print(' ')
}
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3, 4, 5, 8, 9))
show_all_glass <- function(df, filterControl, filterExp, columns){
controlGroup = subset(df, df[,2]==filterControl)
expGroup = subset(df, df[,2]==filterExp)
for(col in columns){
print(colnames(controlGroup)[,col])
print(glass_delta(controlGroup[,col], expGroup[,col]))
print(' ')
}
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3, 4, 5, 8, 9))
show_all_glass <- function(df, filterControl, filterExp, columns){
controlGroup = subset(df, df[,2]==filterControl)
expGroup = subset(df, df[,2]==filterExp)
for(col in columns){
print(colnames(controlGroup)[col])
print(glass_delta(controlGroup[,col], expGroup[,col]))
print(' ')
}
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3, 4, 5, 8, 9))
glass_delta <- function(controlGroup, experimentalGroup){
controlMean = mean(controlGroup, na.rm = TRUE)
expMean = mean(experimentalGroup, na.rm = TRUE)
controlDev = sd(controlGroup, na.rm = TRUE)
return((expMean - controlMean)/controlDev)
}
show_all_glass(ANOVA_Sheet, 'n', 'y', c(3, 4, 5, 8, 9))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(ANOVA_WSP_Sheet)
View(X2D_Godspeed)
View(ANOVA_WSP_Sheet)
show_all_glass(ANOVA_WSP_Sheet, 'n', 'y', c(3, 4, 5, 6, 7))
View(VV_Godspeed)
View(X2D_Godspeed)
View(self_eff_VV)
View(Immersive_Tend)
View(General_Self_Effic)
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(ANOVA_Godspeed_sheet)
show_all_glass(ANOVA_Godspeed_sheet, 'n', 'y', c(3, 4, 5))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
load("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(show_all_t_test)
View(glass_delta)
View(calc_multiple)
View(calc_mean)
View(calc_multiple)
View(ANOVA_WSP_Sheet)
calc_multiple(ANOVA_WSP_Sheet, 'y', c(3, 4, 5, 6, 7, 8))
calc_multiple(ANOVA_WSP_Sheet, 'n', c(3, 4, 5, 6, 7, 8))
View(calc_multiple)
View(calc_mean)
View(calc_multiple)
View(show_all_t_test)
View(calc_multiple)
View(calc_mean)
View(ANOVA_WSP_Sheet)
calc_multiple(ANOVA_WSP_Sheet, 'y', c(3, 4, 5, 6, 7))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis-process.RData")
load("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(show_all_t_test)
View(ANOVA_WSP_Sheet)
show_all_t_test(ANOVA_WSP_Sheet, 'y', 'n', c(3, 4, 5, 6, 7, 8))
View(show_t_test)
show_t_test <- function(dataOne, dataTwo, colNum){
variance = var.test(dataOne[,colNum], dataTwo[,colNum])
if(variance$p.value >= 0.05){
print("Failed to reject Null Hypothesis: Variance is equal")
}else{
print("Rejected Null Hypothesis: Variance is not equal")
}
t_test_results = t.test(dataOne[,colNum], dataTwo[,colNum], var.equal= variance$p.value >= 0.05)
print(t_test_results)
if(t_test_results$p.value < 0.05){
print("**Rejected Null Hypothesis: Signifcant Difference in Mean**")
}else{
print("**Failed to reject Null Hypothesis: No Signifcant Difference in Mean**")
}
}
show_all_t_test(ANOVA_WSP_Sheet, 'y', 'n', c(3, 4, 5, 6, 7, 8))
View(calc_multiple)
calc_multiple(ANOVA_WSP_Sheet, 'y', c(3, 4, 5, 6, 7, 8))
calc_multiple(ANOVA_WSP_Sheet, 'n', c(3, 4, 5, 6, 7, 8))
report_t_test <- function(df, filterIntervention, filterControl, columns)
report_t_test <- function(df, filterIntervention, filterControl, columns)
dataInterv = subset(df, df[,2]==filterIntervention)
dataControl = subset(df, df[,2] == filterControl)
report_t_test <- function(df, filterIntervention, filterControl, columns){
dataInterv = subset(df, df[,2]==filterIntervention)
dataControl = subset(df, df[,2] == filterControl)
for( col in columns){
print(colnames(dataInterv)[col])
print("experimental:")
print(summary(dataInterv[, col]))
print("Control:")
print(summary(dataControl[, col]))
print("T-Tests")
show_t_test(dataInterv, dataControl, col)
}
}
report_t_test(ANOVA_WSP_Sheet, 'y', 'n', c(3, 4, 5, 6, 7))
report_t_test <- function(df, filterIntervention, filterControl, columns){
dataInterv = subset(df, df[,2]==filterIntervention)
dataControl = subset(df, df[,2] == filterControl)
for( col in columns){
print(colnames(dataInterv)[col])
print("experimental:")
print(summary(dataInterv[, col]))
sd(dataInterv[, col])
print("Control:")
print(summary(dataControl[, col]))
sd(dataControl[, col])
print("T-Tests")
show_t_test(dataInterv, dataControl, col)
}
}
report_t_test(ANOVA_WSP_Sheet, 'y', 'n', c(3, 4, 5, 6, 7))
report_t_test <- function(df, filterIntervention, filterControl, columns){
dataInterv = subset(df, df[,2]==filterIntervention)
dataControl = subset(df, df[,2] == filterControl)
for( col in columns){
print(colnames(dataInterv)[col])
print("experimental:")
print(summary(dataInterv[, col]))
print(sd(dataInterv[, col]))
print("Control:")
print(summary(dataControl[, col]))
print(sd(dataControl[, col]))
print("T-Tests")
show_t_test(dataInterv, dataControl, col)
}
}
report_t_test(ANOVA_WSP_Sheet, 'y', 'n', c(3, 4, 5, 6, 7))
report_t_test <- function(df, filterIntervention, filterControl, columns){
dataInterv = subset(df, df[,2]==filterIntervention)
dataControl = subset(df, df[,2] == filterControl)
for( col in columns){
print(colnames(dataInterv)[col])
print("experimental:")
print(summary(dataInterv[, col]))
print(sd(dataInterv[, col], na.rm = TRUE))
print("Control:")
print(summary(dataControl[, col]))
print(sd(dataControl[, col], na.rm = TRUE))
print("T-Tests")
show_t_test(dataInterv, dataControl, col)
}
}
report_t_test(ANOVA_WSP_Sheet, 'y', 'n', c(3, 4, 5, 6, 7))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(ANOVA_Godspeed_sheet)
View(calc_multiple)
View(calc_mean)
View(ANOVA_WSP_Sheet)
View(ANOVA_Godspeed_sheet)
calc_multiple(ANOVA_Godspeed_sheet, 'y', c(3, 4, 5, 6))
calc_multiple(ANOVA_Godspeed_sheet, 'n', c(3, 4, 5, 6))
show_all_t_test(ANOVA_Godspeed_sheet, 'y', 'n', c(3, 4, 5, 6))
calc_multiple(ANOVA_Godspeed_sheet, 'y', c(3, 4, 5, 6))
calc_multiple(ANOVA_Godspeed_sheet, 'n', c(3, 4, 5, 6))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
report_t_test(ANOVA_Godspeed_sheet, 'y', 'n', c(3, 4, 5))
View(sus_3D)
View(sus_2D)
View(VV_SUS)
View(X2D_Godspeed)
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(calc_mean)
View(calc_multiple)
View(ANOVA_Sheet)
calc_multiple(ANOVA_Sheet, 'y', c(5))
calc_multiple(ANOVA_Sheet, 'n', c(5))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
load("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(calc_multiple)
View(calc_mean)
calc_multiple(ANOVA_Sheet, 'y', c(8, 9))
calc_multiple(ANOVA_Sheet, 'n', c(8, 9))
View(report_t_test)
report_t_test(ANOVA_Sheet, 'y', 'n', c(8, 9))
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
anovaResults = aov(ANOVA_Sheet$Post_NSE ~ ANOVA_Sheet$IsVV + ANOVA_Sheet$WSP + ANOVA_Sheet$Godspeed + ANOVA_Sheet$Immersive_Tend + General_Self_Effic, data= ANOVA_Sheet)
summary(anovaResults)
anovaResults = aov(ANOVA_Sheet$Pre_NSE ~ ANOVA_Sheet$IsVV + ANOVA_Sheet$WSP + ANOVA_Sheet$Godspeed + ANOVA_Sheet$Immersive_Tend + General_Self_Effic, data= ANOVA_Sheet)
summary(anovaResults)
anvoaResults = aov(ANOVA_WSP_Sheet$Post_NSE ~ + ANOVA_WSP_Sheet$Realism + ANOVA_WSP_Sheet$`Possiblity to Act` + ANOVA_WSP_Sheet$`Quality of Interface` + ANOVA_WSP_Sheet$`Posibility to examine` + ANOVA_WSP_Sheet$Sound +ANOVA_WSP_Sheet$Sound, data = ANOVA_WSP_Sheet)
anvoaResults = aov(ANOVA_WSP_Sheet$Post_NSE ~ ANOVA_WSP_Sheet$Realism + ANOVA_WSP_Sheet$`Possiblity to Act` + ANOVA_WSP_Sheet$`Quality of Interface` + ANOVA_WSP_Sheet$`Posibility to examine` + ANOVA_WSP_Sheet$Sound +ANOVA_WSP_Sheet$Sound, data = ANOVA_WSP_Sheet)
summary(anovaResults)
anvoaResults = aov(ANOVA_WSP_Sheet$Post_NSE ~ ANOVA_WSP_Sheet$Realism + ANOVA_WSP_Sheet$`Possiblity to Act` + ANOVA_WSP_Sheet$`Quality of Interface` + ANOVA_WSP_Sheet$`Posibility to examine` + ANOVA_WSP_Sheet$Sound +ANOVA_WSP_Sheet$Sound, data = ANOVA_WSP_Sheet)
summary(anvoaResults )
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
load("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(self_eff_VV)
summary(self_eff_VV[,6])
sd(self_eff_VV[,6])
shapiro.test(self_eff_VV[,6])
summary(self_eff_VV[,11])
sd(self_eff_VV[,11])
shapiro.test(self_eff_VV[,11])
sd(self_eff_VV[,6])
summary(self_eff_VV[,6])
shapiro.test(self_eff_VV[,6])
summary(self_eff_2D[,6])
sd(self_eff_2D[,6])
shapiro.test(self_eff_2D[,6])
summary(self_eff_2D[,11])
sd(self_eff_2D[,11])
shapiro.test(self_eff_2D[,11])
anovaResults = aov(ANOVA_Sheet$Post_NSE ~ ANOVA_Sheet$WSP + ANOVA_Sheet$Godspeed + ANOVA_Sheet$Immersive_Tend + General_Self_Effic, data= ANOVA_Sheet)
summary(anovaResults)
anovaResults = aov(ANOVA_Sheet$Post_NSE ~ ANOVA_Sheet$WSP + ANOVA_Sheet$Godspeed, data= ANOVA_Sheet)
summary(anovaResults)
anovaResults = aov(ANOVA_Sheet$Pre_NSE ~ ANOVA_Sheet$WSP + ANOVA_Sheet$Godspeed, data= ANOVA_Sheet)
summary(anovaResults)
View(ANOVA_Sheet)
View(ANOVA_WSP_Sheet)
anvoaResults = aov(ANOVA_WSP_Sheet$Post_NSE ~ ANOVA_WSP_Sheet$Realism + ANOVA_WSP_Sheet$`Possiblity to Act` + ANOVA_WSP_Sheet$`Quality of Interface` + ANOVA_WSP_Sheet$`Posibility to examine` + ANOVA_WSP_Sheet$Sound +ANOVA_WSP_Sheet$Sound, data = ANOVA_WSP_Sheet)
summary(anvoaResults)
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
load("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(anovaResults)
summary(anovaResults)
View(anvoaResults)
View(anvoaResults)
View(ANOVA_WSP_Sheet)
load("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
View(ANOVA_WSP_Sheet)
rows_to_ignore = c(6, 9)
filteredAnova = subset(ANOVA_WSP_Sheet, !(ID %in% rows_to_ignore))
filteredAnova = subset(ANOVA_WSP_Sheet, !(Pre_NSE %in% rows_to_ignore))
View(filteredAnova)
delete(filteredAnova)
rm(filteredAnova)
filteredAnova = ANOVA_WSP_Sheet[-6]
View(filteredAnova)
rm(filteredAnova)
filteredAnova = ANOVA_WSP_Sheet[-6,]
View(filteredAnova)
filteredAnova = filteredAnova[-9,]
View(filteredAnova)
filteredAnova = ANOVA_WSP_Sheet[-6,]
secondFilterAnova = ANOVA_WSP_Sheet[-9,]
View(secondFilterAnova)
View(calc_mean)
View(calc_multiple)
View(glass_delta)
View(report_t_test)
View(secondFilterAnova)
report_t_test(secondFilterAnova, 'y', 'n', c(9))
load("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
filterAnova = ANOVA_WSP_Sheet[-6,]
secondFilterAnova = filterAnova[-9,]
View(secondFilterAnova)
View(filterAnova)
rm(secondFilterAnova)
secondFilterAnova = filterAnova[-9,]
View(secondFilterAnova)
rm(secondFilterAnova)
View(filterAnova)
secondFilterAnova = filterAnova[-9,]
View(secondFilterAnova)
filterAnova = ANOVA_WSP_Sheet[-6, -9]
View(filterAnova)
rm(filterAnova)
filterAnova = ANOVA_WSP_Sheet[[-6,-9],]
filterAnova = ANOVA_WSP_Sheet[c(-6, -9),]
View(filterAnova)
report_t_test(filterAnova, 'y', 'n', (9))
View(report_t_test)
View(show_t_test)
save.image("C:/Users/coria/Documents/Winter2023/thesis/data-analysis/thesis_process_V2.RData")
setwd("C:/Users/coria/Documents/PhD/Winter2025/Visualization/projects/FinalProject/Visualization-Final-Project/data")
library(readr)
core_works <- read_delim("core_works.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(core_works)
library(readr)
WOAII_chapters <- read_delim("WOAII_chapters.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(WOAII_chapters)
View(core_works)
View(WOAII_chapters)
